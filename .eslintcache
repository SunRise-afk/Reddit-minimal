[{"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\index.js":"1","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\App.js":"2","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\reportWebVitals.js":"3","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\Navbar\\Navbar.jsx":"4","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ContentContainer\\ContentContainer.jsx":"5","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\Content\\Content.jsx":"6","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\Aside\\Aside.jsx":"7","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ContentItem\\ContentItem.jsx":"8","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\AsideItem\\AsideItem.jsx":"9","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\LoadingPlug\\LoadingPlug.jsx":"10","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\LoadingPlug\\LoadingPlugContainer.jsx":"11","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ContentItem\\ContentItemContainer.jsx":"12","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\CommentItem\\CommentItem.jsx":"13","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\LoadingPlug\\LoadingComments.jsx":"14","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ClientContainer\\ClientContainer.jsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":187,"mtime":1609763349751,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2322,"mtime":1609766238416,"results":"20","hashOfConfig":"17"},{"size":3188,"mtime":1609777124388,"results":"21","hashOfConfig":"17"},{"size":1397,"mtime":1609766218433,"results":"22","hashOfConfig":"17"},{"size":736,"mtime":1609771136398,"results":"23","hashOfConfig":"17"},{"size":2938,"mtime":1609773890922,"results":"24","hashOfConfig":"17"},{"size":468,"mtime":1609771396875,"results":"25","hashOfConfig":"17"},{"size":1577,"mtime":1609772707081,"results":"26","hashOfConfig":"17"},{"size":682,"mtime":1609772539070,"results":"27","hashOfConfig":"17"},{"size":1225,"mtime":1609773710167,"results":"28","hashOfConfig":"17"},{"size":638,"mtime":1609766216928,"results":"29","hashOfConfig":"17"},{"size":720,"mtime":1609773551338,"results":"30","hashOfConfig":"17"},{"size":769,"mtime":1609771404607,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ixtd9k",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\index.js",[],["64","65"],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\App.js",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\reportWebVitals.js",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ContentContainer\\ContentContainer.jsx",["66"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Aside } from \"../Aside/Aside\";\r\nimport { Content } from \"../Content/Content\";\r\nimport { LoadingPlugContainer } from \"../LoadingPlug/LoadingPlugContainer\";\r\nimport styles from \"./ContentContainer.module.css\";\r\n\r\nexport const ContentContainer = (props) => {\r\n  const [statePosts, setStatePosts] = useState(null);\r\n  const [stateSubreddits, setStateSubreddits] = useState(null);\r\n  const [stateSubreddit, setStateSubreddit] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const asideRef = useRef(null);\r\n  const toTopRef = useRef(null);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(\"https://www.reddit.com/r/popular.json\")\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          const responseJson = response.json();\r\n          return responseJson;\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setStatePosts(response.data.children);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    fetch(\"https://www.reddit.com/subreddits/popular.json\")\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setStateSubreddits(response.data.children);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (stateSubreddit === null) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    fetch(`https://www.reddit.com/${stateSubreddit}/.json`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setStatePosts(response.data.children);\r\n        setIsLoading(false);\r\n      });\r\n  }, [stateSubreddit]);\r\n\r\n  useEffect(() => {\r\n    if (props.searchButtonState) {\r\n      setIsLoading(true);\r\n      fetch(`https://www.reddit.com/search.json?q=${props.searchbarValue}`)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then((response) => {\r\n          props.setSearchbarValue(\"\");\r\n          props.setSearchButtonState(false);\r\n          setStatePosts(response.data.children);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n    return;\r\n  }, [props.searchButtonState]);\r\n\r\n  const changeSubreddit = (subredditTitle) => {\r\n    setStateSubreddit(subredditTitle);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div\r\n        className={styles.subredditScroll}\r\n        ref={toTopRef}\r\n        onClick={() => asideRef.current.scrollIntoView({ behavior: \"smooth\" })}\r\n      >\r\n        Go To Subreddits\r\n      </div>\r\n      <div\r\n        className={styles.to_top_scroll}\r\n        onClick={() => toTopRef.current.scrollIntoView({ behavior: \"smooth\" })}\r\n      >\r\n        <i className=\"fas fa-chevron-circle-up\"></i>\r\n      </div>\r\n      {isLoading ? (\r\n        <LoadingPlugContainer renderItem=\"post\"></LoadingPlugContainer>\r\n      ) : (\r\n        <Content data={statePosts}></Content>\r\n      )}\r\n      <Aside\r\n        data={stateSubreddits}\r\n        changeSrHandler={changeSubreddit}\r\n        refProp={asideRef}\r\n      ></Aside>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\Content\\Content.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\Aside\\Aside.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ContentItem\\ContentItem.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\AsideItem\\AsideItem.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\LoadingPlug\\LoadingPlug.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\LoadingPlug\\LoadingPlugContainer.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ContentItem\\ContentItemContainer.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\CommentItem\\CommentItem.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\LoadingPlug\\LoadingComments.jsx",[],"C:\\User Space\\JAVA SCRIPT\\reddit_client\\src\\components\\ClientContainer\\ClientContainer.jsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":74,"column":6,"nodeType":"73","endLine":74,"endColumn":31,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [props, props.searchButtonState]",{"range":"80","text":"81"},[2263,2288],"[props, props.searchButtonState]"]